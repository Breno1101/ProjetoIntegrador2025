{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gibi\\\\Documents\\\\IMT_CIENCIA_DA_COMPUTACAO\\\\PII\\\\Chatbot_Quantum\\\\ProjetoIntegrador2025\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\n\n// Create Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check if user is already logged in on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('quantumUser');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = useCallback(async (email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, this would be an API call\n      // Simulating API call with timeout\n      await new Promise(resolve => setTimeout(resolve, 800));\n\n      // Mock response - in real app, this would come from backend\n      const userData = {\n        id: 'usr_' + Math.random().toString(36).substr(2, 9),\n        name: email.split('@')[0].split('.').map(part => part.charAt(0).toUpperCase() + part.slice(1)).join(' '),\n        // Capitalize name parts\n        email,\n        role: email.includes('admin') ? 'admin' : 'student',\n        avatar: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=random`\n      };\n\n      // Store user in localStorage\n      localStorage.setItem('quantumUser', JSON.stringify(userData));\n      setCurrentUser(userData);\n      return userData;\n    } catch (err) {\n      setError(err.message || 'Falha ao fazer login');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Register function\n  const register = useCallback(async (name, email, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // In a real app, this would be an API call\n      // Simulating API call with timeout\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock response - in real app, this would come from backend\n      const userData = {\n        id: 'usr_' + Math.random().toString(36).substr(2, 9),\n        name,\n        email,\n        role: 'student',\n        avatar: `https://ui-avatars.com/api/?name=${name}&background=random`\n      };\n\n      // Store user in localStorage\n      localStorage.setItem('quantumUser', JSON.stringify(userData));\n      setCurrentUser(userData);\n      return userData;\n    } catch (err) {\n      setError(err.message || 'Falha ao registrar');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Logout function\n  const logout = useCallback(() => {\n    localStorage.removeItem('quantumUser');\n    setCurrentUser(null);\n  }, []);\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!currentUser,\n    isAdmin: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"oTnIEHPEr9vUI5WlQFqP2szhZ3E=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","JSON","parse","login","email","password","Promise","resolve","setTimeout","userData","id","Math","random","toString","substr","name","split","map","part","charAt","toUpperCase","slice","join","role","includes","avatar","setItem","stringify","err","message","register","logout","removeItem","value","isAuthenticated","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gibi/Documents/IMT_CIENCIA_DA_COMPUTACAO/PII/Chatbot_Quantum/ProjetoIntegrador2025/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\n\r\n// Create Auth Context\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check if user is already logged in on mount\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('quantumUser');\r\n    if (storedUser) {\r\n      setCurrentUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = useCallback(async (email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In a real app, this would be an API call\r\n      // Simulating API call with timeout\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      // Mock response - in real app, this would come from backend\r\n      const userData = {\r\n        id: 'usr_' + Math.random().toString(36).substr(2, 9),\r\n        name: email.split('@')[0]\r\n    .split('.')\r\n    .map(part => part.charAt(0).toUpperCase() + part.slice(1))\r\n    .join(' '), // Capitalize name parts\r\n        email,\r\n        role: email.includes('admin') ? 'admin' : 'student',\r\n        avatar: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=random`,\r\n      };\r\n      \r\n      // Store user in localStorage\r\n      localStorage.setItem('quantumUser', JSON.stringify(userData));\r\n      setCurrentUser(userData);\r\n      return userData;\r\n    } catch (err) {\r\n      setError(err.message || 'Falha ao fazer login');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Register function\r\n  const register = useCallback(async (name, email, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In a real app, this would be an API call\r\n      // Simulating API call with timeout\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock response - in real app, this would come from backend\r\n      const userData = {\r\n        id: 'usr_' + Math.random().toString(36).substr(2, 9),\r\n        name,\r\n        email,\r\n        role: 'student',\r\n        avatar: `https://ui-avatars.com/api/?name=${name}&background=random`,\r\n      };\r\n      \r\n      // Store user in localStorage\r\n      localStorage.setItem('quantumUser', JSON.stringify(userData));\r\n      setCurrentUser(userData);\r\n      return userData;\r\n    } catch (err) {\r\n      setError(err.message || 'Falha ao registrar');\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Logout function\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('quantumUser');\r\n    setCurrentUser(null);\r\n  }, []);\r\n\r\n  // Context value\r\n  const value = {\r\n    currentUser,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!currentUser,\r\n    isAdmin: currentUser?.role === 'admin'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}