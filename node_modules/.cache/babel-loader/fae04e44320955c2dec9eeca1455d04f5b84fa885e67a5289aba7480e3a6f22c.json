{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport ChatContext from '../context/ChatContext';\n\n// Custom hook to use chat context\nconst useChat = () => {\n  _s();\n  const context = useContext(ChatContext);\n  if (!context) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  return context;\n};\n_s(useChat, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default useChat;","map":{"version":3,"names":["useContext","ChatContext","useChat","_s","context","Error"],"sources":["C:/Users/Gibi/Documents/IMT_CIENCIA_DA_COMPUTACAO/PII/Chatbot_Quantum/ProjetoIntegrador2025/src/hooks/useChat.js"],"sourcesContent":["import { useContext } from 'react';\r\nimport ChatContext from '../context/ChatContext';\r\n\r\n// Custom hook to use chat context\r\nconst useChat = () => {\r\n  const context = useContext(ChatContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useChat must be used within a ChatProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default useChat;"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,wBAAwB;;AAEhD;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGJ,UAAU,CAACC,WAAW,CAAC;EAEvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EAEA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CARID,OAAO;AAUb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}